<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 动转静事件记录 -->
<mapper namespace="wcms.d2s.eventlog">
    <resultMap id="eventLogResultMap" type="cn.newstrength.wcms.d2s.bo.EventLogBo">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="task_type" property="taskType" jdbcType="VARCHAR"/>
        <result column="task_type" property="taskTypeDesc" jdbcType="VARCHAR"/>
        <result column="publish_action" property="publishAction" jdbcType="VARCHAR"/>
        <result column="total" property="total" jdbcType="INTEGER"/>
        <result column="success_num" property="successNum" jdbcType="INTEGER"/>
        <result column="event_status" property="eventStatus" jdbcType="CHAR"/>
        <result column="event_status" property="eventStatusDesc" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="total_time" property="totalTime" jdbcType="BIGINT"/>
        <result column="task_uuid" property="taskUuid" jdbcType="VARCHAR"/>
        <result column="site_id" property="siteId" jdbcType="INTEGER"/>
        <result column="error_num" property="errorNum" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 表名定义 -->
    <sql id="table">
		tbl_wcms_d2s_event_log
	</sql>

    <sql id="columns">
        ${alias}.id,
        ${alias}.creator,
        ${alias}.task_type,
        ${alias}.publish_action,
        ${alias}.total,
        ${alias}.success_num,
        ${alias}.event_status,
        ${alias}.create_time,
        ${alias}.total_time,
        ${alias}.task_uuid,
        ${alias}.site_id,
        ${alias}.total-${alias}.success_num as error_num
    </sql>

    <!-- 列表查询条件 -->
    <sql id="listPageConditions">
        ${alias}.site_id = #{siteId}
        <if test="eventStatus != null">and ${alias}.event_status = #{eventStatus}</if>
        <if test="publishAction != null">and ${alias}.publish_action like "%"#{publishAction}"%" </if>
        <if test="startCreateTime != null">and ${alias}.create_time <![CDATA[>=]]> #{startCreateTime}</if>
        <if test="endCreateTime != null">and ${alias}.create_time <![CDATA[<=]]> #{endCreateTime}</if>
    </sql>

    <!-- 插入动转静事件信息 -->
    <insert id="create" useGeneratedKeys="true" 
    	keyProperty="id" parameterType="cn.newstrength.wcms.d2s.model.EventLog">
        INSERT INTO <include refid="table" /> (
	        creator,
	        task_type,
	        event_status,
	        create_time,
	        task_uuid,
	        site_id
        ) values (
	        #{creator},
	        #{taskType},
	        #{eventStatus},
	        now(),
	        #{taskUuid},
	        #{siteId}
        )
    </insert>

    <!-- 更新动转静事件信息状态 -->
    <update id="update" parameterType="cn.newstrength.wcms.d2s.model.EventLog">
        update <include refid="table"/>
        <set>
            <if test="publishAction != null">
                publish_action =  #{publishAction, jdbcType=VARCHAR},
            </if>
            <if test="total != null ">
                total = #{total, jdbcType=INTEGER},
            </if>
           <if test="successNum !=null ">
                success_num = #{successNum, jdbcType=INTEGER},
            </if>
            <if test="eventStatus != null">
                event_status = #{eventStatus, jdbcType=CHAR},
            </if>
            <if test="totalTime !=null ">
                total_time = #{totalTime, jdbcType=BIGINT},
            </if>
            <if test="siteId !=null">
                site_id=#{siteId, jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id} and task_uuid = #{taskUuid}
    </update>

    <!-- 删除动转静事件信息 -->
    <delete id="delById" parameterType="hashmap">
        delete
        from <include refid="table"/>
        where id = #{id} and task_uuid = #{taskUuid} and eventStatus=1
    </delete>

    <!-- 根据ID获取动转静事件 -->
    <select id="getEventLogById" parameterType="hashMap" resultMap="eventLogResultMap">
        select
        <include refid="columns">
            <property name="alias" value="eventLog"/>
        </include>
        from
        <include refid="table"/> eventLog
         where id=#{id} and task_uuid=#{taskUuid}
    </select>

    <!-- 事件信息列表总记录数 -->
    <select id="listCount" parameterType="hashMap" resultType="int">
        SELECT
        count(1)
        from
        <include refid="table"/> eventLog
        where
        <include refid="listPageConditions">
            <property name="alias" value="eventLog"/>
        </include>
    </select>

    <!-- 事件信息列表 -->
    <select id="listPage" parameterType="hashMap" resultMap="eventLogResultMap">
        SELECT
        <include refid="columns">
            <property name="alias" value="eventLog"/>
        </include>
        from <include refid="table"/> eventLog
        where
        <include refid="listPageConditions">
            <property name="alias" value="eventLog"/>
        </include>
        order by eventLog.create_time desc
    </select>

</mapper>